<!doctype html>
{{- $lang := .Lang}}
{{- $root := .RootPath }}
{{- $searchBase := printf "%s/grid/%s" .SearchAddr .Lang }}
<html lang="{{ $lang }}" data-bs-theme="dark">
<head>
    {{ template "head.gohtml" . }}
    <style>
        .btn-csp {
            --bs-btn-bg: #212529;
        }
    </style>
</head>
<body class="w-100" style="background-image: url({{ $root }}static/img/index_bg2.jpg); background-size: cover;" data-bs-theme="dark">
    {{ template "nav.gohtml" . }}

    <main class="container-fluid">
            <div class="row d-none d-md-block">
                <div class="col p-0 csp-bubble-area" style="" id="bubbleArea"></div>
            </div>
        <div class="container mt-3 mb-3">
                <div class="row">
                    <div class="col-md d-flex justify-content-end align-items-center">
                        <div class="input-group">
                            <input style="background-color: rgba(156, 156, 181, 0.7);" id="search" class="form-control w-auto longborderblack" type="search" placeholder="{{ localize "searchtext" $lang }}" aria-label="{{ localize "search" $lang }}">&nbsp;
                        </div>
                        <button onclick="search('{{ $searchBase }}')" class="btn noborder" type="submit"><img alt="KI search" class="" width=28 src="{{ $root }}static/img/lupe_black.png"></button>
                        <button onclick="search('{{ $searchBase }}', '', false, true)" class="btn noborder" type="submit"><img class="" width=28 src="{{ $root }}static/img/ki2_black.png"></button>
                    </div>
                </div>
                <div class="container mt-5">
                    {{- range $key, $coll := .Collections }}
                        <span class="me-3">
                        <button style="margin: 1px; padding: 1px 4px 1px 4px;" onclick="this.setAttribute('selected', 'true');search('{{ $searchBase }}', '', false, false)" type="button" class="noborder btn btn-csp collectionButton" value="{{ $coll.Id }}" selected="false">
                            {{ $coll.Title }}
                        {{- $ds := digits $coll.Count }}
                        {{- range $digit := $ds }}
                            <img class="number" style="height:30px;" src="{{ printf "%sstatic/img/%s.png" $root (runeString $digit) }}"/>
                        {{- end }}
                        </button>
                        </span>
                    {{ end }}

                    <!--
                    <table class="table">
                        <tbody>
                        {{- range $key, $coll := .Collections }}
                            <tr>
                                <td>
                                    <div class="form-check">
                                        <input name="collection_{{ $coll.Id }}" value="{{ $coll.Id }}" class="collectionCheck form-check-input pborder" type="checkbox" id="collSwitch_{{ $key }}">
                                        <label class="form-check-label" for="collSwitch_{{ $key }}">{{ $coll.Title }}</label>
                                    </div>
                                </td>
                                <td>
                                    <a style="white-space: nowrap;" href="{{ $coll.Url }}" target="_blank" type="button" class="btn btn-sm pborder"><span class="bi-box-arrow-up-right"></span>&nbsp{{ localize "collection" $lang }}</a>
                                </td>
                            </tr>
                    {{- end }}
                        </tbody>
                    </table>
                    -->
                </div>

        </div>

        <div class="px-4 py-1 text-center">
            <!-- h1 class="display-5 fw-bold text-body-emphasis">Centered hero</h1 -->
            <div class="col-lg-8 mx-auto">
                <p class="lead mb-4 text-black fw-medium rounded-2" style="background-color: rgba(156, 156, 181, 0.7);">
                    {{- if eq $lang "en" }}
                    The web portal <span style="font-variant: small-caps;">Collections of Swiss Performance Art</span> offers a panorama of the performance art scene in Switzerland. It brings together a number of collections and places the artistic works in relation to one another. It offers the potential to read very different events in different constellations. The connections and diversity of performance history from its beginnings to the present day become visible. The HGK Basel media ibrary of the University of Applied Sciences and Arts Northwestern Switzerland provides the platform, making it easier to find.
                        <br />
                    Videos, photos, texts, interviews, scores and concepts can still be entered and existing entries corrected as a basis for historical interpretations, for the processing of translocal performance histories and for making source material accessible. Individual artists can continue to upload their contributions to the Revolving Histories collection. Organizers with extensive collections should contact the media library directly for new entries.
                    {{- else if eq $lang "fr" }}
                    Le portail <span style="font-variant: small-caps;">Collections de l'Art Performance Suisse</span> offre un panorama de l'actualité artistique de la performance en Suisse. Il réunit une série de collections et met les travaux artistiques en relation les uns avec les autres. Il offre le potentiel de lire des événements très différents dans des constellations différentes. Les liens et la diversité de l'histoire de la performance, de ses débuts à aujourd'hui, deviennent ainsi visibles. La médiathèque HGK Basel de la Haute école spécialisée du Nord-Ouest de la Suisse met la plateforme à disposition et facilite ainsi la recherche.
                    <br />
                    Il est possible de saisir des vidéos, des photos, des textes, des interviews, des scores et des concepts, et de corriger des entrées existantes, afin de servir de base à des interprétations historiques, à l'élaboration de performances translocales Geschichte:n et à la mise à disposition de matériel source. Les artistes individuels peuvent continuer à télécharger leurs contributions dans la collection Revolving Histories. Les organisateurs disposant de collections importantes sont priés de s'adresser directement à la médiathèque pour les nouvelles inscriptions.
                   {{- else if eq $lang "it" }}
                    Il portale <span style="font-variant: small-caps;">Collezioni Performance Art Svizzera</span> offre una panoramica della scena della performance art in Svizzera. Riunisce una serie di collezioni e mette le opere artistiche in relazione tra loro. Offre la possibilità di leggere eventi molto diversi in costellazioni diverse. Le connessioni e la diversità della storia della performance, dagli inizi ai giorni nostri, diventano visibili. La mediateca HGK Basel dell'Università di Scienze Applicate e Arti della Svizzera Nord-occidentale fornisce la piattaforma, rendendo più facile la ricerca.
                    <br />
                    Video, foto, testi, interviste, partiture e concetti possono ancora essere inseriti e le voci esistenti corrette come base per interpretazioni storiche, per analizzare storie di performance translocali e per rendere accessibile il materiale di partenza. I singoli artisti possono continuare a caricare i loro contributi nella collezione Revolving Histories. Gli organizzatori con collezioni estese dovrebbero contattare direttamente la mediateca per nuovi inserimenti.
                    {{- else }}
                    Das Portal <span style="font-variant: small-caps;">Sammlungen Performance Kunst Schweiz</span> bietet ein Panorama zum Performance Kunstgeschehen in der Schweiz. Es vereint eine Reihe von Sammlungen und setzt die künstlerischen Arbeiten ins Verhältnis zueinander. Es bietet das Potenzial ganz verschiedene Ereignisse in unterschiedlichen Konstellationen zu lesen. Dabei werden die Zusammenhänge und Diversität der Performance Geschichte:n von ihren Anfängen bis heute sichtbar. Die Mediathek HGK Basel der Fachhochschule Nordwestschweiz stellt die Plattform zur Verfügung und erleichtert damit die Auffindbarkeit.
                    <br />
                    Als Grundlage für historische Auslegeordnungen, für das Aufarbeiten translokaler Performance Geschichte:n und das Zugänglichmachen von Quellenmaterial können weiterhin Videos, Fotos, Texte, Interviews, Scores und Konzepte eingegeben und vorhandene Einträge korrigiert werden. Einzelne Kunstschaffenden können ihre Beiträge weiterhin in der Sammlung Revolving Histories hochladen. Veranstalter:innen mit umfangreichen Sammlungen wenden sich für die Neuaufnahme bitte direkt an die Mediathek.
                    {{- end }}
                </p>
            </div>
        </div>
    </main>

    {{ template "footer.gohtml" . }}

    <script src="static/bootstrap/js/bootstrap.bundle.min.js" crossorigin="anonymous"></script>
    <script src="static/js/d3.js"></script>
    <script src="static/js/d3bubble.js"></script>
    <script src="static/js/search.js"></script>
    <script>
        function getImgUrl(img, diameter) {
            return `{{ $root }}/static/img/wesen_behaelter/${img}`
        }

        {{- $maxRadius := 100 }}
        {{- $minRadius := 60 }}
        {{- $maxDiameter := mul $maxRadius 2 }}
        const collections =  [
            {{- range $key, $coll := .Collections }}
            { id: '{{ $key }}', image: {{ $coll.Image }}, title: '{{ $coll.Title }}', link: '{{ printf "%s?collections=%d" $searchBase $coll.Id }}{{/* $coll.Url */}}', radius: {{ randInt $minRadius $maxRadius}}, value: {{ divf (randInt 10 99) 100 }} },
            {{- end }}
        ]


        const area = document.getElementById('bubbleArea');
        const width = area.offsetWidth;
        const height = area.offsetHeight;

        const svg = d3.create("svg")
            .attr("width", width)
            .attr("height", height)
            .attr("viewBox", [0, 0, width, height])
            .attr("style", "max-width: 100%; height: auto; height: intrinsic;")
            //.attr("fill", "currentColor")
            .attr("font-size", "0.7em")
            .attr("font-family", "sans-serif")
            .attr("text-anchor", "middle");

        const xScale = d3.scaleLinear().domain([0, 1]).range([0, width-100]);

        const numNodes = {{ len .Collections }}; // 40;
        const nodes = collections;


        const simulation = d3.forceSimulation(nodes)
            .force('charge', d3.forceManyBody().strength(5))
            .force('x', d3.forceX().x(function (d) {
                return xScale(d.value);
            }))
            .force('y', d3.forceY().y(function (d) {
                return 0;
            }))
            .force('collision', d3.forceCollide().radius(function (d) {
                return d.radius;
            }))
            .on('tick', ticked);

        const leaf = svg.selectAll('a')
            .data(nodes)
            .join('a')
            .attr("xlink:href", d => d.link)
            .attr("target", "_blank")

        leaf.append("clipPath")
            .attr("id", d => `clip-${d.id}`)
            .append("circle")
            .attr('transform', d => 'translate(' + [d.radius, d.radius] + ')')
            .attr("r", d => d.radius);

        let maxDiameter = {{ $maxDiameter }};
        leaf.append("image")
            .attr("width", d => d.radius*2)
            .attr("height", d => d.radius*2)
            .attr("clip-path", d => `url(#clip-${d.id})`)
            .attr('transform', d => 'translate(' + [-d.radius, -d.radius] + ')')
            //.attr("xlink:href", d => `https://cms.basel-collections.ch/assets/${ d.image }?fit=cover&width=${maxDiameter}&height=${maxDiameter}`);
            .attr("xlink:href", d => getImgUrl( d.image, maxDiameter)   );


        var ticksPerRender = 2;
        var tickCount = 0;
        function ticked() {
            tickCount++;
            if (tickCount <= ticksPerRender) {
                return;
            }
            tickCount = 0;

            const leaf = svg.selectAll('a')
                .data(nodes)
                .join('a')
                .attr('transform', d => 'translate(' + [d.x, d.y+height/2] + ')')

        }

        let container = document.getElementById('bubbleArea');

        // Append the SVG element.
        container.append(svg.node());
    </script>
</body>
</html>

