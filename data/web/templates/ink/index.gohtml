	<!doctype html>
{{- $lang := .Lang}}
{{- $root := .RootPath }}
{{- $searchBase := printf "%s/grid/%s" .SearchAddr .Lang }}
<html lang="{{ $lang }}" data-bs-theme="dark">
<head>
    {{ template "head.gohtml" . }}
    <style>
        .btn-csp {
            --bs-btn-bg: #212529;
        }
    </style>
</head>
<body class="w-100" style="" data-bs-theme="dark">
    {{ template "nav.gohtml" . }}

    <main class="container-fluid">
            <div class="row d-none d-md-block">
                <div class="col p-0 csp-bubble-area" style="" id="bubbleArea"></div>
            </div>
        <div class="container mt-3 mb-3">
                <div class="row">
                    <div class="col-md d-flex justify-content-end align-items-center">
                        <div class="input-group">
                            <input
                                    style=""
                                    id="search"
                                    class="form-control w-auto"
                                    type="search"
                                    placeholder="{{ localize "searchtext" $lang }}"
                                    aria-label="{{ localize "search" $lang }}">&nbsp;
                        </div>
                        <button onclick="search('{{ $searchBase }}')" class="btn noborder" type="submit"><i class="bi bi-search"></i></button>
                        <button onclick="search('{{ $searchBase }}', '', false, true)" class="btn noborder" type="submit"><i class="bi bi-stars"></i></button>
                    </div>
                </div>
                <div class="container mt-5">
                    {{- range $key, $coll := .Collections }}
                        <span class="me-3">
                        <button style="" onclick="this.setAttribute('selected', 'true');search('{{ $searchBase }}', '', false, false)" type="button" class="btn btn-primary m-1 collectionButton" value="{{ $coll.Id }}" selected="false">
                            {{ $coll.Title }} [{{ $coll.Count}}]
                        </button>
                        </span>
                    {{ end }}

                </div>

        </div>

        <div class="px-4 py-1 text-center">
            <!-- h1 class="display-5 fw-bold text-body-emphasis">Centered hero</h1 -->
            <div class="col-lg-8 mx-auto">
                <p class="lead mb-4 fw-medium rounded-2" style="">
                    {{- if eq $lang "en" }}
                    The <span style="font-variant: small-caps;">Integrated Catalogue</span> of the media library combines different sources of research and education outcomes at the Academy of Art and Design Basel FHNW and the digital collections. This includes resources from external persons. In addition to the directly public area, it offers at the top right a login for dedicated target groups. Protected content can be accessed in this way.
					<br />
			As a public collection, the media library of Basel Academy of Art and Design FHNW provides the catalogue and thus makes findability easier.
                    			<br />
			{{- else if eq $lang "fr" }}
                    	Le <span style="font-variant : small-caps ;">Catalogue intégré</span> de la médiathèque combine différentes sources de résultats de la recherche et de l'enseignement à l'Académie d'art et de design de Bâle FHNW et les collections numériques. Cela inclut des ressources provenant de personnes extérieures. En plus de la zone directement publique, il offre en haut à droite un login pour des groupes cibles spécifiques. Il est ainsi possible d'accéder à des contenus protégés.
				<br />
			La médiathèque de l' Haute École d'Art et de Design Bâle FHNW met ce catalogue à disposition en tant que collection publique et facilite ainsi la recherche.
                    <br />
                    {{- else if eq $lang "it" }}

                    Il <span style="font-variant: small-caps;">catalogo integrato</span> della mediateca combina diverse fonti di ricerca e di formazione dell'Accademia di Arte e Design di Basilea FHNW e le collezioni digitali. Questo include risorse provenienti da persone esterne. Oltre all'area direttamente pubblica, offre in alto a destra un login per gruppi target dedicati. In questo modo è possibile accedere a contenuti protetti.
					<br />
					Come collezione pubblica, la mediateca dell’Accademia d'Arte e Design di Basilea FHNW mette a disposizione questo catalogo, e quindi la rende più facilmente reperibile.
					<br />
                    {{- else }}
                    Der <span style="font-variant: small-caps;">Integrierte Katalog</span> der Mediathek vereint Quellen der Forschung und Lehre der Hochschule für Gestaltung und Kunst sowie der digitalen Sondersammlungen. Er bietet neben dem unmittelbar öffentlichen Bereich oben rechts einen Login für unterschiedliche Zielgruppen. So können geschützte Inhalte zugänglich werden.
					<br /> 
					Die Mediathek der HGK Basel der Fachhochschule Nordwestschweiz stellt als öffentliche Sammlung diesen Katalog zur Verfügung und erleichtert damit die Auffindbarkeit.
                    <br />
                    {{- end }}
                </p>
            </div>
        </div>
    </main>

    {{ template "footer.gohtml" . }}

    <script src="static/bootstrap/js/bootstrap.bundle.min.js" crossorigin="anonymous"></script>
    <script src="static/js/d3.js"></script>
    <script src="static/js/d3bubble.js"></script>
    <script src="static/js/search.js"></script>
    <script>
        function getImgUrl(img, diameter) {
            return `{{ $root }}/static/img/wesen_behaelter/${img}`
        }

        {{- $maxRadius := 100 }}
        {{- $minRadius := 60 }}
        {{- $maxDiameter := mul $maxRadius 2 }}
        const collections =  [
            {{- range $key, $coll := .Collections }}
            { id: '{{ $key }}', image: {{ $coll.Image }}, title: '{{ $coll.Title }}', link: '{{ printf "%s?collections=%d" $searchBase $coll.Id }}{{/* $coll.Url */}}', radius: {{ randInt $minRadius $maxRadius}}, value: {{ divf (randInt 10 99) 100 }} },
            {{- end }}
        ]


        const area = document.getElementById('bubbleArea');
        const width = area.offsetWidth;
        const height = area.offsetHeight;

        const svg = d3.create("svg")
            .attr("width", width)
            .attr("height", height)
            .attr("viewBox", [0, 0, width, height])
            .attr("style", "max-width: 100%; height: auto; height: intrinsic;")
            //.attr("fill", "currentColor")
            .attr("font-size", "0.7em")
            .attr("font-family", "sans-serif")
            .attr("text-anchor", "middle");

        const xScale = d3.scaleLinear().domain([0, 1]).range([0, width-100]);

        const numNodes = {{ len .Collections }}; // 40;
        const nodes = collections;


        const simulation = d3.forceSimulation(nodes)
            .force('charge', d3.forceManyBody().strength(5))
            .force('x', d3.forceX().x(function (d) {
                return xScale(d.value);
            }))
            .force('y', d3.forceY().y(function (d) {
                return 0;
            }))
            .force('collision', d3.forceCollide().radius(function (d) {
                return d.radius;
            }))
            .on('tick', ticked);

        const leaf = svg.selectAll('a')
            .data(nodes)
            .join('a')
            .attr("xlink:href", d => d.link)
            .attr("target", "_blank")

        leaf.append("clipPath")
            .attr("id", d => `clip-${d.id}`)
            .append("circle")
            .attr('transform', d => 'translate(' + [d.radius, d.radius] + ')')
            .attr("r", d => d.radius);

        let maxDiameter = {{ $maxDiameter }};
        leaf.append("image")
            .attr("width", d => d.radius*2)
            .attr("height", d => d.radius*2)
            .attr("clip-path", d => `url(#clip-${d.id})`)
            .attr('transform', d => 'translate(' + [-d.radius, -d.radius] + ')')
            //.attr("xlink:href", d => `https://cms.basel-collections.ch/assets/${ d.image }?fit=cover&width=${maxDiameter}&height=${maxDiameter}`);
            .attr("xlink:href", d => getImgUrl( d.image, maxDiameter)   );


        var ticksPerRender = 2;
        var tickCount = 0;
        function ticked() {
            tickCount++;
            if (tickCount <= ticksPerRender) {
                return;
            }
            tickCount = 0;

            const leaf = svg.selectAll('a')
                .data(nodes)
                .join('a')
                .attr('transform', d => 'translate(' + [d.x, d.y+height/2] + ')')

        }

        let container = document.getElementById('bubbleArea');

        // Append the SVG element.
        container.append(svg.node());
    </script>
</body>
</html>

